@model BudgetTracker.Models.CategoryGroup

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>CategoryGroup</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="Icon" class="control-label"></label>
                <input type="hidden" asp-for="Icon" />
                <div id="icon-picker" class="d-flex flex-wrap border p-2 rounded">
                    @if (ViewBag.Icons != null)
                    {
                        foreach (var iconClass in ViewBag.Icons)
                        {
                            <div class="icon-item p-2" onclick="selectIcon(this, '@iconClass')">
                                <i class="@iconClass fa-2x"></i>
                            </div>
                        }
                    }
                </div>
                <span asp-validation-for="Icon" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        function selectIcon(element, iconClass) {
            // Cập nhật giá trị cho ô input ẩn có id là "Icon"
            document.getElementById('Icon').value = iconClass;

            // Xóa lớp 'selected' khỏi tất cả các item khác
            document.querySelectorAll('#icon-picker .icon-item').forEach(item => {
                item.classList.remove('selected');
            });

            // Thêm lớp 'selected' cho item vừa được nhấn để tạo hiệu ứng
            element.classList.add('selected');
        }
    </script>
    <style>
        .icon-item {
            cursor: pointer;
            border: 1px solid transparent;
            border-radius: 5px;
            transition: all 0.2s;
        }
        .icon-item:hover {
            background-color: #e9ecef;
        }
        .icon-item.selected {
            background-color: #0d6efd;
            color: white;
            border-color: #0a58ca;
        }
    </style>
}
