@model BudgetTracker.Models.DashboardViewModel
@{
    ViewData["Title"] = "Dashboard";
    var culture = new System.Globalization.CultureInfo("vi-VN");
}

<div class="content-page-container">
    <div class="text-center">
        <h1 class="dashboard-title">QUẢN LÝ THU CHI</h1>
        <p>Tổng quan tháng @DateTime.Now.Month/@DateTime.Now.Year</p>
    </div>

    @if (!string.IsNullOrEmpty(Model.MotivationalMessage))
    {
        var messageClass = Model.Balance >= 0 ? "alert-success" : "alert-danger";
        <div class="alert @messageClass text-center" role="alert">
            <i class="fas fa-lightbulb me-2"></i> @Model.MotivationalMessage
        </div>
    }

    <div class="row mt-4">
        <div class="col-md-4">
            <div class="card summary-card income mb-3">
                <div class="card-header">TỔNG THU NHẬP</div>
                <div class="card-body">
                    <h5 class="card-title">@Model.TotalIncome.ToString("C0", culture)</h5>
                    <p class="card-text">Tổng số tiền bạn kiếm được trong tháng.</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card summary-card expense mb-3">
                <div class="card-header">TỔNG CHI TIÊU</div>
                <div class="card-body">
                    <h5 class="card-title">@Model.TotalExpense.ToString("C0", culture)</h5>
                    <p class="card-text">Tổng số tiền bạn đã chi tiêu trong tháng.</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card summary-card balance mb-3">
                <div class="card-header">SỐ DƯ</div>
                <div class="card-body">
                    <h5 class="card-title">@Model.Balance.ToString("C0", culture)</h5>
                    <p class="card-text">Số tiền còn lại của bạn trong tháng.</p>
                </div>
            </div>
        </div>
    </div>

    @if (Model.AllGoalsTargetAmount > 0)
    {
        var overallProgressPercentage = (int)((Model.AllGoalsCurrentAmount / Model.AllGoalsTargetAmount) * 100);
        if (overallProgressPercentage > 100) { overallProgressPercentage = 100; }

        <div class="row">
            <div class="col-12">
                <div class="card shadow-sm mb-4">
                    <div class="card-body">
                        <h5 class="card-title fw-bold">Tổng tiến độ Mục tiêu</h5>
                        <div class="d-flex justify-content-between mb-2">
                            <span class="text-success fw-bold">@Model.AllGoalsCurrentAmount.ToString("N0") đ</span>
                            <span class="text-muted">/ @Model.AllGoalsTargetAmount.ToString("N0") đ</span>
                        </div>
                        <div class="progress" style="height: 25px;">
                            <div class="progress-bar progress-bar-striped bg-success" role="progressbar" style="width: @overallProgressPercentage%;" aria-valuenow="@overallProgressPercentage" aria-valuemin="0" aria-valuemax="100">
                                <strong>@overallProgressPercentage%</strong>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="row">
        <div class="col-lg-7">
            <div class="card shadow-sm mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Cơ cấu chi tiêu trong tháng</h6>
                </div>
                <div class="card-body">
                    <canvas id="expenseChart"></canvas>
                </div>
            </div>

            <div class="card shadow-sm mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Theo dõi Ngân sách Tháng</h6>
                </div>
                <div class="card-body">
                    @if (Model.BudgetProgresses != null && Model.BudgetProgresses.Any())
                    {
                        foreach (var budget in Model.BudgetProgresses)
                        {
                            var progressBarColor = "bg-success";
                            if (budget.ProgressPercentage >= 75 && budget.ProgressPercentage < 95)
                            {
                                progressBarColor = "bg-warning";
                            }
                            else if (budget.ProgressPercentage >= 95)
                            {
                                progressBarColor = "bg-danger";
                            }

                            <div class="mb-3">
                                <div class="d-flex justify-content-between">
                                    <strong>@budget.Status @budget.CategoryName</strong>
                                    <span>@budget.AmountSpent.ToString("N0") / @budget.BudgetAmount.ToString("N0") đ</span>
                                </div>
                                <div class="progress" style="height: 20px;">
                                    <div class="progress-bar @progressBarColor" role="progressbar" style="width: @budget.ProgressPercentage%;" aria-valuenow="@budget.ProgressPercentage" aria-valuemin="0" aria-valuemax="100">
                                        @budget.ProgressPercentage%
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <p>Bạn chưa đặt ngân sách nào cho tháng này. <a asp-controller="Budgets" asp-action="Index">Đặt ngay!</a></p>
                    }
                </div>
            </div>
        </div>

        <div class="col-lg-5">
            <div class="card shadow-sm mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Top 4 Danh mục Chi tiêu nhiều nhất</h6>
                </div>
                <div class="card-body">
                    @if (Model.TopCategories != null && Model.TopCategories.Any())
                    {
                        foreach (var category in Model.TopCategories)
                        {
                            <div class="d-flex justify-content-between align-items-center mb-2 pb-2 border-bottom">
                                <span><i class="@category.Icon me-2"></i> @category.CategoryName</span>
                                <span class="fw-bold">@category.TotalSpent.ToString("N0") đ</span>
                            </div>
                        }
                    }
                    else
                    {
                        <p class="text-muted">Chưa có dữ liệu chi tiêu để thống kê.</p>
                    }
                </div>
            </div>

            <div class="card shadow-sm mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Giao dịch Định kỳ Sắp tới (7 ngày)</h6>
                </div>
                <div class="card-body">
                    @if (Model.UpcomingTransactions != null && Model.UpcomingTransactions.Any())
                    {
                        foreach (var trans in Model.UpcomingTransactions)
                        {
                            var amountColor = trans.CategoryType == StaticDetails.Income ? "text-success" : "text-danger";
                            <div class="d-flex justify-content-between align-items-center mb-2 pb-2 border-bottom">
                                <div>
                                    <i class="@trans.CategoryIcon me-2"></i>
                                    <span>@trans.Description</span>
                                </div>
                                <div class="text-end">
                                    <span class="fw-bold @amountColor">@trans.Amount.ToString("N0") đ</span><br />
                                    <small class="text-muted">@trans.NextDueDate.ToString("dd/MM")</small>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <p class="text-muted">Không có giao dịch định kỳ nào đến hạn.</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            fetch('/api/DashboardApi/ExpenseSummaryForChart')
                .then(response => response.json())
                .then(result => {
                    const ctx = document.getElementById('expenseChart').getContext('2d');
                    new Chart(ctx, {
                        type: 'doughnut',
                        data: {
                            labels: result.labels,
                            datasets: [{
                                label: 'Chi tiêu theo Danh mục',
                                data: result.data,
                                backgroundColor: [
                                    '#4E79A7', '#F28E2B', '#E15759', '#76B7B2', '#59A14F',
                                    '#EDC948', '#B07AA1', '#FF9DA7', '#9C755F', '#BAB0AC'
                                ],
                                hoverOffset: 4
                            }]
                        },
                        // --- CẤU HÌNH MỚI CHO TOOLTIP ---
                        options: {
                            plugins: {
                                tooltip: {
                                    callbacks: {
                                        label: function(context) {
                                            // Lấy các giá trị từ dữ liệu
                                            let label = context.label || '';
                                            let value = context.parsed || 0;
                                            // Lấy giá trị phần trăm từ mảng mới của chúng ta
                                            let percentage = result.percentages[context.dataIndex];

                                            // Định dạng lại số tiền
                                            let formattedValue = value.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });

                                            // Trả về chuỗi mới cho tooltip
                                            return `Bạn đã chi ${formattedValue} cho ${label}, chiếm ${percentage.toFixed(2)}% tổng chi tháng.`;
                                        }
                                    }
                                }
                            }
                        }
                    });
                })
                .catch(error => console.error('Error fetching chart data:', error));
        });
    </script>
}
